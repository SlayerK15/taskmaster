name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: taskmaster
  ECS_SERVICE: taskmaster
  ECS_CLUSTER: taskmaster-cluster
  ECS_TASK_DEFINITION: taskmaster
  CONTAINER_NAME: taskmaster

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to Amazon ECS
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Java JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Step 3: Build the Spring Boot application
    - name: Build application with Maven
      run: mvn clean package -DskipTests

    # Step 4: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Step 5: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    # Step 6: Build and push Docker image
    - name: Build and push Docker image
      id: build-image
      env:
        ECR_REGISTRY: 841162667281.dkr.ecr.us-east-1.amazonaws.com
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # Step 7: Prepare ECS task definition
    - name: Prepare ECS task definition
      run: |
        if aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} > /dev/null 2>&1; then
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
          --query 'taskDefinition' > task-definition.json
        else
          echo "No existing task definition found. Using local template."
          cp task-definition.json
        fi

    # Debug the task definition file
    - name: Debug Task Definition
      run: cat task-definition.json

    # Step 8: Update ECS task definition
    - name: Update ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    # Step 9: Deploy ECS task definition
    - name: Deploy ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
